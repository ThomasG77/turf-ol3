!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var r;r="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,(r.turf||(r.turf={})).invariant=e()}}(function(){return function e(r,t,o){function n(f,u){if(!t[f]){if(!r[f]){var a="function"==typeof require&&require;if(!u&&a)return a(f,!0);if(i)return i(f,!0);var y=new Error("Cannot find module '"+f+"'");throw y.code="MODULE_NOT_FOUND",y}var p=t[f]={exports:{}};r[f][0].call(p.exports,function(e){var t=r[f][1][e];return n(t?t:e)},p,p.exports,e,r,t,o)}return t[f].exports}for(var i="function"==typeof require&&require,f=0;f<o.length;f++)n(o[f]);return n}({1:[function(e,r){function t(e){if(Array.isArray(e)&&"number"==typeof e[0]&&"number"==typeof e[1])return e;if(e){if("Feature"===e.type&&e.geometry&&"Point"===e.geometry.type&&Array.isArray(e.geometry.coordinates))return e.geometry.coordinates;if("Point"===e.type&&Array.isArray(e.coordinates))return e.coordinates}throw new Error("A coordinate, feature, or point geometry is required")}function o(e,r,t){if(!r||!t)throw new Error("type and name required");if(!e||e.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.type)}function n(e,r,t){if(!t)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!e.geometry||e.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.geometry.type)}function i(e,r,t){if(!t)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+t+", FeatureCollection required");for(var o=0;o<e.features.length;o++){var n=e.features[o];if(!n||"Feature"!==n.type||!n.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!n.geometry||n.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+n.geometry.type)}}r.exports.geojsonType=o,r.exports.collectionOf=i,r.exports.featureOf=n,r.exports.getCoord=t},{}]},{},[1])(1)});